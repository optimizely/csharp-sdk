---
name: Csharp CI with .NET

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    
env:
  RELEASE_BRANCH: "3.3.x"

jobs:

  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore nuget packages
        run: |
          nuget restore OptimizelySDK.Travis.sln
          nuget install ./OptimizelySDK.Tests/packages.config -OutputDirectory ./packages
          nuget install NUnit.Runners -Version 2.6.4 -OutputDirectory ./testrunner
      - name: script
        run: |
          ./install_mono.sh
          xbuild /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=$(pwd)/keypair.snk /p:Configuration=Release ./OptimizelySDK.Travis.sln
          mono ./testrunner/NUnit.Runners.2.6.4/tools/nunit-console.exe ./OptimizelySDK.Tests/bin/Release/OptimizelySDK.Tests.dll
      - name: find and sign dll
        id: unit_tests
        run: |
          sudo find . -path './OptimizelySDK*bin/Release/OptimizelySDK*.dll' -not -regex '.*Tests.*' -print0 | while IFS= read -r -d '' file; do sn -R $file ./keypair.snk; done
      - name: Set the env
        if: always() && steps.unit_tests.outcome == 'success'
        run: |
          echo "REPO_SLUG=${{ github.repository }}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${{ github.run_id }}" >> $GITHUB_ENV
          echo "ATTEMPT_NUM=${{ github.run_attempt }}" >> $GITHUB_ENV
          echo "RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV
          echo "EVENT_TYPE=${{ github.event_name }}" >> $GITHUB_ENV
          echo "CURRENT_BRANCH=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV
      - name: Check on success
        if: always() && steps.unit_tests.outcome == 'success' && ${{ env.CURRENT_BRANCH }} == ${{ env.RELEASE_BRANCH }} && ${{ env.EVENT_TYPE }} == "push"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.OFTA_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.OFTA_SECRET }}
          AWS_DEFAULT_REGION: ${{ secrets.OFTA_REGION }}
        run: |
          find . -path './OptimizelySDK*bin/Release/OptimizelySDK*.dll' -not -regex '.*Tests.*' -print0 | while IFS= read -r -d '' file; do (AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }} AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }} aws s3 cp $file s3://optly-fs-travisci-artifacts/${{ env.REPO_SLUG }}/${{ env.BUILD_NUMBER }}/${{ env.RUN_NUMBER }}/${{ env.ATTEMPT_NUM }}/$(basename $file)-unsigned); done
 