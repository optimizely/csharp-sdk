name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lintCodebase:
    runs-on: ubuntu-latest
    name: Lint Codebase
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files
          fetch-depth: 0
      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          VALIDATE_CSHARP: true

  netFrameworksAndUnitTest:
    name: Build Framework & Run Unit Tests
    needs: [ lintCodebase ]
    runs-on: windows-2019 # required version for Framework 4.0
    env:
      REPO_SLUG: ${{ github.repository }}
      BUILD_NUMBER: ${{ github.run_id }}
      ATTEMPT_NUM: ${{ github.run_attempt }}
      RUN_NUMBER: ${{ github.run_number }}
      EVENT_TYPE: ${{ github.event_name }}
      CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
      - name: Restore NuGet packages
        run: nuget restore ./OptimizelySDK.NETFramework.sln
      - name: Build & strongly name assemblies
        run: msbuild /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=$(pwd)/keypair.snk /p:Configuration=Release ./OptimizelySDK.NETFramework.sln
      - name: Install & Run NUnit tests
        run: |
          nuget install NUnit.Console -Version 3.15.2 -DirectDownload -OutputDirectory .
          # https://docs.nunit.org/articles/nunit/running-tests/Console-Command-Line.html
          ./NUnit.ConsoleRunner.3.15.2\tools\nunit3-console.exe /timeout 10000 /process Separate ./OptimizelySDK.Tests/bin/Release/OptimizelySDK.Tests.dll
  
  netStandard16:
    name: Build Standard 1.6
    needs: [ netFrameworksAndUnitTest ]
    runs-on: windows-2022
    env:
      REPO_SLUG: ${{ github.repository }}
      BUILD_NUMBER: ${{ github.run_id }}
      ATTEMPT_NUM: ${{ github.run_attempt }}
      RUN_NUMBER: ${{ github.run_number }}
      EVENT_TYPE: ${{ github.event_name }}
      CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1.x
      - name: Restore dependencies
        run: dotnet restore OptimizelySDK.NetStandard16/OptimizelySDK.NetStandard16.csproj
      - name: Build & strongly name assemblies
        run: dotnet build OptimizelySDK.NetStandard16/OptimizelySDK.NetStandard16.csproj /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=D:\a\csharp-sdk\csharp-sdk\keypair.snk -c Release

  netStandard20:
    name: Build Standard 2.0
    needs: [ netFrameworksAndUnitTest ]
    runs-on: windows-2022
    env:
      REPO_SLUG: ${{ github.repository }}
      BUILD_NUMBER: ${{ github.run_id }}
      ATTEMPT_NUM: ${{ github.run_attempt }}
      RUN_NUMBER: ${{ github.run_number }}
      EVENT_TYPE: ${{ github.event_name }}
      CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 3.1.x
      - name: Restore dependencies
        run: dotnet restore OptimizelySDK.NetStandard20/OptimizelySDK.NetStandard20.csproj
      - name: Build & strongly name assemblies
        run: dotnet build OptimizelySDK.NetStandard20/OptimizelySDK.NetStandard20.csproj /p:SignAssembly=true /p:AssemblyOriginatorKeyFile=D:\a\csharp-sdk\csharp-sdk\keypair.snk -c Release
  
  integration_tests:
    name: Run Integration Tests
    needs: [ netFrameworksAndUnitTest, netStandard16, netStandard20 ]
    uses: optimizely/csharp-sdk/.github/workflows/integration_test.yml@master
    secrets:
      CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      TRAVIS_COM_TOKEN: ${{ secrets.TRAVIS_COM_TOKEN }}
  
  fullstack_production_suite:
    name: Run Performance Tests
    needs: [ netFrameworksAndUnitTest, netStandard16, netStandard20 ]
    uses: optimizely/csharp-sdk/.github/workflows/integration_test.yml@master
    with:
      FULLSTACK_TEST_REPO: ProdTesting
    secrets:
      CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      TRAVIS_COM_TOKEN: ${{ secrets.TRAVIS_COM_TOKEN }}
